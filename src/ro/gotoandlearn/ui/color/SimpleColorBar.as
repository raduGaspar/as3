package ro.gotoandlearn.ui.color{	import flash.display.CapsStyle;	import flash.display.GradientType;	import flash.display.LineScaleMode;	import flash.display.Sprite;	import flash.geom.Matrix;		public class SimpleColorBar extends Sprite	{				public function SimpleColorBar(barW:Number=100, barH:Number=100) {			var halfHeight				:Number = barH >> 1;			var colorPercentage			:Number;			var radians					:Number;			var redShift				:Number;			var greenShift				:Number;			var blueShift				:Number;			var color					:Number;			var colorMatrixWhite		:Matrix;			var colorMatrixBlack		:Matrix;						for(var i:Number=0; i<barW; i+=0.1) {				colorPercentage 	= i / barW;				radians 			= (-360 * colorPercentage) * (Math.PI / 180);				redShift 			= Math.cos(radians) * 127 + 128 << 16;				greenShift 			= Math.cos(radians + 2 * Math.PI / 3) * 127 + 128 << 8;				blueShift 			= Math.cos(radians + 4 * Math.PI / 3) * 127 + 128;				color  				= redShift | greenShift | blueShift;								colorMatrixWhite 	= new Matrix();				colorMatrixBlack 	= new Matrix();				colorMatrixWhite.createGradientBox(1, halfHeight, Math.PI * 0.5, 0, 0);				colorMatrixBlack.createGradientBox(1, halfHeight, Math.PI * 0.5, 0, halfHeight);								graphics.lineStyle(1, 0, 1, false, LineScaleMode.NONE, CapsStyle.NONE);				graphics.lineGradientStyle(GradientType.LINEAR, [0xFFFFFF, color], [100, 100], [0, 255], colorMatrixWhite);				graphics.moveTo(i, 0);				graphics.lineTo(i, halfHeight);				graphics.lineGradientStyle(GradientType.LINEAR, [color, 0], [100, 100], [0, 255], colorMatrixBlack);				graphics.moveTo(i, halfHeight);				graphics.lineTo(i, barH);			}		}	}}